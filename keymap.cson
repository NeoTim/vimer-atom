# Your keymap
#
# Atom keymaps work similarly to stylesheets. Just as stylesheets use selectors
# to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# '.editor':
#   'enter': 'editor:newline'
#
# 'body':
#   'ctrl-P': 'core:move-up'
#   'ctrl-p': 'core:move-down'



##################################################################################
# body level
##################################################################################
'body':

  # find file
  'ctrl-p': 'fuzzy-finder:toggle-file-finder'
  'ctrl-shift-p': 'command-palette:toggle'
  'ctrl-b': 'fuzzy-finder:toggle-buffer-finder'
  'ctrl-shift-b': 'fuzzy-finder:toggle-git-status-finder'

  #find
  'cmd-f': 'project-find:toggle'

  'ctrl-o': 'aplication:open'
  'ctrl-shift-o': 'aplication:add-project-folder'
  'alt-o': 'git-projects:toggle' # git-project

  # tree view
  'ctrl-\\': 'tree-view:toggle'
  'ctrl-,': 'tree-view:toggle-focus'
  'f2': 'tree-view:rename'
  'f1': 'tree-view:remove'
  'ctrl-c': 'tree-view:duplicate'
  'ctrl-v': 'tree-view:paste'
  'ctrl-n': 'tree-view:add-file'
  'ctrl-shift-n': 'tree-view:add-folder'
  'ctrl-shift-f': 'tree-view:add-folder'


  # project-manager
  'cmd-p': 'project-manager:list-projects'

##################################################################################
# body level
##################################################################################
'atom-text-editor':
  'ctrl-k': 'core:move-up'
  'ctrl-j': 'core:move-down'

##################################################################################
# vim-mode level
##################################################################################

## vim command-mode
'atom-text-editor.vim-mode.normal-mode:not(.insert-mode)':

  'c c': 'editor:toggle-line-comments' # comment
  'alt-space': 'termrk:toggle'

  # manage pane
  'w v': 'pane:split-right' # split vertial
  'w h': 'pane:split-down' # split horizon
  'w c': 'core:close' # close
  'ctrl-h': 'window:focus-pane-on-left'
  'ctrl-l': 'window:focus-pane-on-right'
  'ctrl-j': 'window:focus-pane-below'
  'ctrl-k': 'window:focus-pane-above'

  # tab
  't n': 'pane:show-next-item'
  't p': 'pane:show-previous-item'

  # 'ctrl-k': 'window:focus-pane-on-above'
  # 'ctrl-j': 'window:focus-pane-on-below'

  ## git
  '; g': 'git-plus:menu' # git-plus
  'g d': 'git-diff:toggle-diff-list' # git-diff
  'g l': 'git-log:show' # git-log
  'g h': 'git-history:show-file-history' # git-history
  'g c': 'git-control:toggle' # git-project

  # emmet
  # 'atom-text-editor[data-grammar="YOUR GRAMMAR HERE"]:not([mini])':
    # 'tab': 'emmet:expand-abbreviation-with-tab'

  # jscs
  '; j': 'jscs-fixer:fix'

  # ternjs
  '; t': 'tern:restart'

  # smalls
  '; a': 'smalls:start'

  # open this
  'g f': 'open-this:here'
  'ctrl-w f': 'open-this:split-down'
  'ctrl-w F': 'open-this:split-right'

  'c l': 'clipboard-plus:toggle'
  '; w': 'core:save'

  '; f': 'atom-beautify:beautify-editor' # code format
  '; e': 'esformatter' # code format
  '; c': 'csscomb:run' # csscomb

  'g t': 'atom-ctags:go-to-declaration'

  'm d': 'markdown-preview:toggle'
  't b': 'symbols-tree-view:toggle'

  'ctrl-shift-f': 'fuzzy-grep:toggle'

  'ctrl-p': 'fuzzy-finder:toggle-file-finder'
  'ctrl-shift-p': 'command-palette:toggle'
  'ctrl-b': 'fuzzy-finder:toggle-buffer-finder'
  'ctrl-shift-b': 'fuzzy-finder:toggle-git-status-finder'

  # move-up
  'shift-h': 'editor:move-to-first-character-of-line'
  'shift-l': 'editor:move-to-end-of-screen-line'

  'ctrl-t': 'atom-ctags:toggle-file-symbols'

  # selection
  'ctrl-a': 'core:select-all'


## vim visual-mode
'atom-text-editor.vim-mode.visual-mode':
  'c c': 'editor:toggle-line-comments'
  'v': 'expand-region:expand'
